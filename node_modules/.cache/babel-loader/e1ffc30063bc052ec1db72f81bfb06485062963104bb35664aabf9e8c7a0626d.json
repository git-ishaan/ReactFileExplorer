{"ast":null,"code":"const useTraverseTree = () => {\n  // Add a file or folder in tree\n  // Can be optimised using Dynamic Programming\n  const insertNode = function (tree, folderId, item, isFolder) {\n    if (tree.id === folderId && tree.isFolder) {\n      tree.items.unshift({\n        id: new Date().getTime(),\n        name: item,\n        isFolder: isFolder,\n        items: []\n      });\n      return tree;\n    }\n    let latestNode = [];\n    latestNode = tree.items.map(ob => {\n      return insertNode(ob, folderId, item, isFolder);\n    });\n    return {\n      ...tree,\n      items: latestNode\n    };\n  };\n  const deleteNode = () => {}; // Do it Yourself\n\n  const renameNode = () => {}; // Do it Yourself\n\n  return {\n    insertNode,\n    deleteNode,\n    renameNode\n  };\n};\nexport default useTraverseTree;","map":{"version":3,"names":["useTraverseTree","insertNode","tree","folderId","item","isFolder","id","items","unshift","Date","getTime","name","latestNode","map","ob","deleteNode","renameNode"],"sources":["C:/Users/91852/Downloads/file-explorer/file-explorer/src/hooks/use-traverse-tree.js"],"sourcesContent":["const useTraverseTree = () => {\n  // Add a file or folder in tree\n  // Can be optimised using Dynamic Programming\n  const insertNode = function (tree, folderId, item, isFolder) {\n    if (tree.id === folderId && tree.isFolder) {\n      tree.items.unshift({\n        id:new Date().getTime(),\n        name: item,\n        isFolder: isFolder,\n        items: []\n      });\n\n      return tree;\n    }\n\n    let latestNode = [];\n    latestNode = tree.items.map((ob) => {\n      return insertNode(ob, folderId, item, isFolder);\n    });\n\n    return { ...tree, items: latestNode };\n  };\n\n  const deleteNode = () => {}; // Do it Yourself\n\n  const renameNode = () => {}; // Do it Yourself\n\n  return { insertNode, deleteNode, renameNode };\n};\n\nexport default useTraverseTree;"],"mappings":"AAAA,MAAMA,eAAe,GAAG,MAAM;EAC5B;EACA;EACA,MAAMC,UAAU,GAAG,UAAUC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,EAAE;IAC3D,IAAIH,IAAI,CAACI,EAAE,KAAKH,QAAQ,IAAID,IAAI,CAACG,QAAQ,EAAE;MACzCH,IAAI,CAACK,KAAK,CAACC,OAAO,CAAC;QACjBF,EAAE,EAAC,IAAIG,IAAI,EAAE,CAACC,OAAO,EAAE;QACvBC,IAAI,EAAEP,IAAI;QACVC,QAAQ,EAAEA,QAAQ;QAClBE,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,OAAOL,IAAI;IACb;IAEA,IAAIU,UAAU,GAAG,EAAE;IACnBA,UAAU,GAAGV,IAAI,CAACK,KAAK,CAACM,GAAG,CAAEC,EAAE,IAAK;MAClC,OAAOb,UAAU,CAACa,EAAE,EAAEX,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,CAAC;IACjD,CAAC,CAAC;IAEF,OAAO;MAAE,GAAGH,IAAI;MAAEK,KAAK,EAAEK;IAAW,CAAC;EACvC,CAAC;EAED,MAAMG,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE7B,MAAMC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE7B,OAAO;IAAEf,UAAU;IAAEc,UAAU;IAAEC;EAAW,CAAC;AAC/C,CAAC;AAED,eAAehB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}